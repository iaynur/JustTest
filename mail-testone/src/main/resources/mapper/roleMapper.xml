<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Dao.roleMapper">
  <resultMap id="BaseResultMap" type="com.Pojo.role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select GROUP_CONCAT(ro.id) as id,GROUP_CONCAT(ro.name) as name,re.text as power from role_res rr left join role ro on ro.id=rr.role_id left join resource re on rr.res_id=re.id where ro.id = #{id,jdbcType=INTEGER} group by re.text
  </select>

  <select id="allrole" resultMap="BaseResultMap" parameterType="map">
   select role.id as id,role.name as name ,GROUP_CONCAT(resource.text) as power from role_res right join role  on role.id = role_res.role_id left join resource  on role_res.res_id = resource.id GROUP BY role.id,role.name limit #{start},#{size}
  </select>


  <select id="selectByName" resultMap="BaseResultMap" parameterType="com.Pojo.role">
    select
    <include refid="Base_Column_List" />
    from role
    where name = #{name,jdbcType=VARCHAR}
  </select>

  <select id="getRoleByUserid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select * from role where id=(select role_id as r_id from user_role ur where ur.user_id=(select u.id as u_id from myUser u where u.id = #{id,jdbcType=INTEGER}))
  </select>
  
  <select id="everyRole" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from role
  </select>

  <select id="roleNum" resultType="int">
    select count(id) from role
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.Pojo.role">
    insert into role (id, name)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.Pojo.role">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.Pojo.role">
    update role
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Pojo.role">
    update role
    set name = #{name,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>